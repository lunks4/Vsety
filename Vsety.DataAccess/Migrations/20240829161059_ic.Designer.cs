// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vsety.DataAccess;

#nullable disable

namespace Vsety.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240829161059_ic")]
    partial class ic
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Vsety.DataAccess.Entities.CommentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescriptionComment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<TimeOnly?>("time")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.ImgEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Imgs");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.PersonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ImgEntity")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ImgEntity");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.PostEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ImgId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserLikesEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserRepostsEntityId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ImgId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserLikesEntityId");

                    b.HasIndex("UserRepostsEntityId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PostEntityId1")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PostEntityId");

                    b.HasIndex("PostEntityId1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserLikesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserLikes");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserRepostsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserReposts");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.CommentEntity", b =>
                {
                    b.HasOne("Vsety.DataAccess.Entities.PostEntity", "Post")
                        .WithMany("UsersComments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vsety.DataAccess.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.PersonEntity", b =>
                {
                    b.HasOne("Vsety.DataAccess.Entities.ImgEntity", "Img")
                        .WithMany()
                        .HasForeignKey("ImgEntity");

                    b.Navigation("Img");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.PostEntity", b =>
                {
                    b.HasOne("Vsety.DataAccess.Entities.ImgEntity", "Img")
                        .WithMany()
                        .HasForeignKey("ImgId");

                    b.HasOne("Vsety.DataAccess.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Vsety.DataAccess.Entities.UserLikesEntity", null)
                        .WithMany("Posts")
                        .HasForeignKey("UserLikesEntityId");

                    b.HasOne("Vsety.DataAccess.Entities.UserRepostsEntity", null)
                        .WithMany("Posts")
                        .HasForeignKey("UserRepostsEntityId");

                    b.Navigation("Img");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserEntity", b =>
                {
                    b.HasOne("Vsety.DataAccess.Entities.PersonEntity", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Vsety.DataAccess.Entities.PostEntity", null)
                        .WithMany("UsersLikes")
                        .HasForeignKey("PostEntityId");

                    b.HasOne("Vsety.DataAccess.Entities.PostEntity", null)
                        .WithMany("UsersReposts")
                        .HasForeignKey("PostEntityId1");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserLikesEntity", b =>
                {
                    b.HasOne("Vsety.DataAccess.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserRepostsEntity", b =>
                {
                    b.HasOne("Vsety.DataAccess.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.PostEntity", b =>
                {
                    b.Navigation("UsersComments");

                    b.Navigation("UsersLikes");

                    b.Navigation("UsersReposts");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserLikesEntity", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Vsety.DataAccess.Entities.UserRepostsEntity", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
